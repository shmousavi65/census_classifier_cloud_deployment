# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  workflow_dispatch:

permissions:
  contents: read
  id-token: write

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.12"
    
    - name: Install dependencies
      run: |
        pip install -r requirements-dev.txt
        # python -m pip install --upgrade pip
        # pip install flake8 pytest
        # if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi
      
    - name: Print versions
      run: |
        python --version
        pip --version
        flake8 --version
        pytest --version
        dvc --version || true
        aws --version || true

    # --- Security & Supply-chain ---
    - name: Bandit (SAST)
      run: |
        if [ -f bandit.yaml ]; then
          bandit -c bandit.yaml -r .
        else
          bandit -r . -ll -iii -x tests
        fi

    - name: Dependency audit (pip-audit)
      run: |
        pip-audit -r requirements.txt --progress-spinner=off --strict
        # If you also pin dev deps in CI, add:
        # pip-audit -r requirements-dev.txt --progress-spinner=off --strict
    
    - name: Lint with flake8
      run: |
        flake8 .
        # flake8 . --count --ignore E402 --show-source --statistics
        # stop the build if there are Python syntax errors or undefined names
        # flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        # flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    
    - name: "Configure AWS Credentials"
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-region: us-east-1
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    
    - name: Install DVC
      uses: iterative/setup-dvc@v1
    
    - name: Run DVC pull
      run: |
        dvc pull -f
    
    - name: Test with pytest
      run: |
        cd development/tests
        pytest -s -vv .
